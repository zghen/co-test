// Generated by CoffeeScript 1.8.0
(function() {
  var Promise, _exec,
    __slice = [].slice;

  module.exports = function(logger) {
    return function() {
      var arg, args, cmd, fail_if_stderr, options, _i, _len;
      cmd = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
      fail_if_stderr = false;
      options = {};
      for (_i = 0, _len = args.length; _i < _len; _i++) {
        arg = args[_i];
        switch (typeof arg) {
          case 'boolean':
            fail_if_stderr = arg;
            break;
          case 'object':
            options = arg;
            break;
          default:
            throw new Error("Invalid " + (typeof arg) + " argument");
        }
      }
      if (logger != null) {
        logger.info(cmd, options);
      }
      return _exec(cmd, options).then(function(_arg) {
        var stderr, stdout;
        stdout = _arg[0], stderr = _arg[1];
        if (logger != null) {
          logger.info('Command returned', {
            cmd: cmd,
            stdout: stdout,
            stderr: stderr
          });
        }
        if (stderr && fail_if_stderr) {
          return Promise.reject(new Error(stderr));
        } else {
          return stdout;
        }
      })["catch"](function(error) {
        if (logger != null) {
          logger.error("" + cmd + " failed: " + error);
        }
        return Promise.reject(error);
      });
    };
  };

  Promise = require('bluebird');

  _exec = Promise.promisify((require('child_process')).exec);

}).call(this);
